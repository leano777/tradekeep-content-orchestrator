version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: tradekeep-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-tradekeep}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tradekeep-network

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: tradekeep-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 9002
      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD}@postgres:5432/${DB_NAME:-tradekeep}?schema=public
      JWT_SECRET: ${JWT_SECRET}
      # Social Media APIs
      TWITTER_API_KEY: ${TWITTER_API_KEY}
      TWITTER_API_SECRET: ${TWITTER_API_SECRET}
      TWITTER_ACCESS_TOKEN: ${TWITTER_ACCESS_TOKEN}
      TWITTER_ACCESS_SECRET: ${TWITTER_ACCESS_SECRET}
      LINKEDIN_ACCESS_TOKEN: ${LINKEDIN_ACCESS_TOKEN}
      LINKEDIN_PERSON_URN: ${LINKEDIN_PERSON_URN}
      INSTAGRAM_USER_ID: ${INSTAGRAM_USER_ID}
      INSTAGRAM_ACCESS_TOKEN: ${INSTAGRAM_ACCESS_TOKEN}
      # Email
      RESEND_API_KEY: ${RESEND_API_KEY}
      EMAIL_FROM: ${EMAIL_FROM:-noreply@tradekeep.com}
    ports:
      - "${BACKEND_PORT:-9002}:9002"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - tradekeep-network
    command: >
      sh -c "
        npx prisma migrate deploy &&
        node src/server-minimal.js
      "

  # Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:9002}
    container_name: tradekeep-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:9002}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - backend
    networks:
      - tradekeep-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: tradekeep-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - tradekeep-network

networks:
  tradekeep-network:
    driver: bridge

volumes:
  postgres_data: